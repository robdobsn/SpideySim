// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.spideyGeom = (function() {
    function spideyGeom() {
      this.stepFn = __bind(this.stepFn, this);
    }

    spideyGeom.prototype.ledInterval = 5;

    spideyGeom.prototype.steps = 0;

    spideyGeom.prototype.padInfo = [
      {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.32,
        endPos: 0.99,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.7,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.35,
        endPos: .98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.2,
        endPos: 1.0,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.34,
        endPos: 0.99,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.02,
        endPos: 0.49,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.27,
        endPos: 1.0,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.69,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.52,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.62,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.02,
        endPos: 0.55,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.38,
        endPos: 0.99,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.33,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.37,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: false
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.7,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.55,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.68,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.98,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.7,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.76,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.2,
        endPos: 0.67,
        hiddenLeds: 5,
        reversed: true
      }, {
        chainIdx: 0,
        stripIdx: 0,
        startPos: 0.01,
        endPos: 0.65,
        hiddenLeds: 5,
        reversed: true
      }
    ];

    spideyGeom.prototype.init = function() {
      var pad_centers, pads, svg, text;
      svg = d3.select("#spideyGeom svg");
      pads = svg.selectAll("path");
      pad_centers = pads[0].map(function(d, i) {
        var bbox;
        bbox = d.getBBox();
        return [bbox.x + bbox.width / 2, bbox.y + bbox.height / 2, i];
      });
      this.ledsData = pads[0].map((function(_this) {
        return function(d, i) {
          var intv, leds, pathEnd, pathLen, pathPos, pathStart;
          pathLen = d.getTotalLength();
          if (!_this.padInfo[i].reversed) {
            intv = _this.ledInterval;
            pathStart = pathLen * _this.padInfo[i].startPos;
            pathEnd = pathLen * _this.padInfo[i].endPos;
          } else {
            intv = -_this.ledInterval;
            pathStart = pathLen * (1 - _this.padInfo[i].startPos);
            pathEnd = pathLen * (1 - _this.padInfo[i].endPos);
          }
          leds = (function() {
            var _i, _results;
            _results = [];
            for (pathPos = _i = pathStart; intv > 0 ? _i <= pathEnd : _i >= pathEnd; pathPos = _i += intv) {
              _results.push({
                pt: d.getPointAtLength(pathPos),
                clr: '#' + Math.random().toString(16).substr(-6)
              });
            }
            return _results;
          })();
          return leds;
        };
      })(this));
      this.padLeds = svg.selectAll("g.padLeds").data(this.ledsData).enter().append("g").attr("class", "padLeds");
      this.ledsSel = this.padLeds.selectAll(".led").data(function(d, i) {
        return d;
      });
      this.ledsSel.enter().append("circle").attr("class", "led").attr("cx", function(d) {
        return d.pt.x;
      }).attr("cy", function(d) {
        return d.pt.y;
      }).attr("r", 4).attr("fill", function(d, i) {
        return d.clr;
      });
      text = svg.selectAll("text").data(pad_centers).enter().append("text");
      text.attr("x", function(d) {
        return d[0] - 10;
      }).attr("y", function(d) {
        return d[1] + 8;
      }).text(function(d) {
        return d[2];
      }).attr("font-family", "sans-serif").attr("font-size", "20px").attr("fill", "#DCDCDC");
      d3.timer(this.stepFn);
    };

    spideyGeom.prototype.stepFn = function() {
      var clr, ledData, padLedsData, _i, _j, _len, _len1, _ref;
      this.steps++;
      if (this.steps > 1000) {
        return true;
      }
      _ref = this.ledsData;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        padLedsData = _ref[_i];
        clr = '#' + Math.random().toString(16).substr(-6);
        for (_j = 0, _len1 = padLedsData.length; _j < _len1; _j++) {
          ledData = padLedsData[_j];
          ledData.clr = clr;
        }
      }
      this.ledsSel.attr("fill", function(d) {
        return d.clr;
      });
      return false;
    };

    return spideyGeom;

  })();

}).call(this);
